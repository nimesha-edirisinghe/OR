server_tokens off; # hides version on 404 or 500 pages


server {
  listen 80;
  server_name OR;
  root /var/www;
  gzip off;
  proxy_pass_header Server;
  add_header Cache-Control no-cache;
  index index.html index.htm;
  error_page 403 /e403.html;
  error_page 404 /e404.html;
  error_page 405 /e404.html;
  error_page 500 501 502 503 504 /e500.html;
  add_header X-Frame-Options "SAMEORIGIN";
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
  add_header X-XSS-Protection "1; mode=block";
  add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
  client_body_buffer_size 8k;
  client_max_body_size 2m; 
  client_body_in_single_buffer on;  
  client_header_buffer_size  1m; 
  large_client_header_buffers 4 8k;

    

    location ~* \.(?:sh|env)$ {
        return 404;
    }


    location ~* /config\.js {
        valid_referers none blocked server_names *.algonomy.com; 

        if ($invalid_referer) {
            return 403;
        }
    }

    location ~* /auth/realms/ {
        return 404;
    }

    location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
        try_files $uri $uri/ /index.html;
        
        set $cors '';
        if ($http_origin ~ '^https?://(.*\.algonomy\.com)') {
            set $cors 'true';
        }

        if ($cors = 'true') {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
            # required to be able to read Authorization header in frontend
            #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
        }
    }

        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 4h;
          access_log off;
          add_header Cache-Control "public";
        }

        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1h;
            access_log off;
            add_header Cache-Control "public";
            valid_referers *.algonomy.com localhost;
            if ($invalid_referer) {
                return 404;
            }
        }

        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }


 
}